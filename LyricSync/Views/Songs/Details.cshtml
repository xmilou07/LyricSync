@model LyricSync.Models.Song

@{
    ViewData["Title"] = "Details";
} 
<div class="container py-4">
    <div class="card shadow-sm">
        <div class="card-header bg-white border-0">
            <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center">
                <div>
                    <h1 class="h4 mb-1" style="color:#4a3aff;">Details</h1>
                    <div class="text-muted small">
                        @Html.DisplayFor(m => m.Title)
                        @if (!string.IsNullOrWhiteSpace(Model.Artist) || !string.IsNullOrWhiteSpace(Model.Album))
                        {
                            <span class="mx-2">•</span>
                            <span>@Html.DisplayFor(m => m.Artist)@(!string.IsNullOrWhiteSpace(Model.Artist) && !string.IsNullOrWhiteSpace(Model.Album) ? " — " : "")@Html.DisplayFor(m => m.Album)</span>
                        }
                    </div>
                </div>
                <div class="mt-3 mt-md-0">
                    <span class="badge bg-light text-dark me-1">
                        @Html.DisplayNameFor(m => m.Genre): @Html.DisplayFor(m => m.Genre)
                    </span>
                    <span class="badge bg-light text-dark">
                        Uploaded: @Html.DisplayFor(m => m.UploadedAt)
                    </span>
                </div>
            </div>
        </div>

        <div class="card-body">
            <dl class="row">
                <dt class="col-12 col-md-3 text-muted">Title</dt>
                <dd class="col-12 col-md-9 mb-3">@Html.DisplayFor(model => model.Title)</dd>

                <dt class="col-12 col-md-3 text-muted">Artist</dt>
                <dd class="col-12 col-md-9 mb-3">@Html.DisplayFor(model => model.Artist)</dd>

                <dt class="col-12 col-md-3 text-muted">Album</dt>
                <dd class="col-12 col-md-9 mb-3">@Html.DisplayFor(model => model.Album)</dd>

                <dt class="col-12 col-md-3 text-muted">Lyrics</dt>
                <dd class="col-12 col-md-9 mb-3">
                    @if (Model.Lyric != null)
                    {
                        <pre class="bg-light p-3 rounded" style="white-space: pre-wrap; overflow:auto;">@Model.Lyric.Content</pre>
                    }
                    else if (!string.IsNullOrWhiteSpace(Model.Lyrics))
                    {
                        <pre class="bg-light p-3 rounded" style="white-space: pre-wrap; overflow:auto;">@Model.Lyrics</pre>
                    }
                    else
                    {
                        <span class="text-muted">No lyrics available.</span>
                    }
                </dd>

                <dt class="col-12 col-md-3 text-muted">@Html.DisplayNameFor(model => model.MP3File)</dt>
                <dd class="col-12 col-md-9 mb-3">
                    @if (!string.IsNullOrWhiteSpace(Model.MP3File))
                    {
                        <div class="mb-2">
                            <audio class="w-100" controls>
                                <source src="@Url.Content(Model.MP3File)" />
                                Your browser does not support the audio element.
                            </audio>
                        </div>
                        <small class="text-muted">Source: @Html.DisplayFor(model => model.MP3File)</small>
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.MP3File)
                    }
                </dd>

                <dt class="col-12 col-md-3 text-muted">@Html.DisplayNameFor(model => model.UploadedAt)</dt>
                <dd class="col-12 col-md-9 mb-3">
                    <span>@Html.DisplayFor(model => model.UploadedAt)</span>
                </dd>

                <dt class="col-12 col-md-3 text-muted">@Html.DisplayNameFor(model => model.UploadedById)</dt>
                <dd class="col-12 col-md-9 mb-3">
                    <span>@Html.DisplayFor(model => model.UploadedById)</span>
                </dd>

                <dt class="col-12 col-md-3 text-muted">@Html.DisplayNameFor(model => model.Genre)</dt>
                <dd class="col-12 col-md-9 mb-3">@Html.DisplayFor(model => model.Genre)</dd>
            </dl>
        </div>

        <div class="card-footer bg-white border-0 d-flex justify-content-between">
            <div>
                <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-primary btn-sm">
                    Edit
                </a>
                <a asp-action="Index" class="btn btn-secondary btn-sm ms-2">
                    Back to List
                </a>
            </div>
            <div class="text-muted small align-self-center">
                ID: @Model?.Id
            </div>
        </div>
    </div>
</div>
